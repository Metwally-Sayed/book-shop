{"ast":null,"code":"const api = 'https://reactnd-books-api.udacity.com';\nlet token = localStorage.token;\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\nconst headers = {\n  Accept: 'application/json',\n  Authorization: token\n};\nexport const get = bookId => {\n  let books = [];\n  fetch(`${api}/books/${bookId}`, {\n    headers\n  }).then(res => res.json()).then(data => books = data.book);\n  return;\n};\nexport const getAll = () => fetch(`${api}/books`, {\n  headers\n}).then(res => res.json()).then(data => data.books);\nexport const update = (book, shelf) => fetch(`${api}/books/${book.id}`, {\n  method: 'PUT',\n  headers: {\n    ...headers,\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    shelf\n  })\n}).then(res => res.json());\nexport const search = (query, maxResults) => fetch(`${api}/search`, {\n  method: 'POST',\n  headers: {\n    ...headers,\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    query,\n    maxResults\n  })\n}).then(res => res.json()).then(data => data.books);","map":{"version":3,"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","get","bookId","books","fetch","then","res","json","data","book","getAll","update","shelf","id","method","body","JSON","stringify","search","query","maxResults"],"sources":["D:/tawwr/nd0191-c1-myreads/starter/src/BooksAPI.js"],"sourcesContent":["const api = 'https://reactnd-books-api.udacity.com';\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: 'application/json',\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) => {\r\n  let books = [];\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => (books = data.book));\r\nreturn\r\n\r\n};\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n"],"mappings":"AAAA,MAAMA,GAAG,GAAG,uCAAuC;AAEnD,IAAIC,KAAK,GAAGC,YAAY,CAACD,KAAK;AAE9B,IAAI,CAACA,KAAK,EAAEA,KAAK,GAAGC,YAAY,CAACD,KAAK,GAAGE,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;AAE9E,MAAMC,OAAO,GAAG;EACdC,MAAM,EAAE,kBAAkB;EAC1BC,aAAa,EAAER;AACjB,CAAC;AAED,OAAO,MAAMS,GAAG,GAAIC,MAAM,IAAK;EAC7B,IAAIC,KAAK,GAAG,EAAE;EACdC,KAAK,CAAE,GAAEb,GAAI,UAASW,MAAO,EAAC,EAAE;IAAEJ;EAAQ,CAAC,CAAC,CACzCO,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAML,KAAK,GAAGK,IAAI,CAACC,IAAK,CAAC;EACxC;AAEA,CAAC;AAED,OAAO,MAAMC,MAAM,GAAG,MACpBN,KAAK,CAAE,GAAEb,GAAI,QAAO,EAAE;EAAEO;AAAQ,CAAC,CAAC,CAC/BO,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKA,IAAI,CAACL,KAAK,CAAC;AAE/B,OAAO,MAAMQ,MAAM,GAAG,CAACF,IAAI,EAAEG,KAAK,KAChCR,KAAK,CAAE,GAAEb,GAAI,UAASkB,IAAI,CAACI,EAAG,EAAC,EAAE;EAC/BC,MAAM,EAAE,KAAK;EACbhB,OAAO,EAAE;IACP,GAAGA,OAAO;IACV,cAAc,EAAE;EAClB,CAAC;EACDiB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;IAAEL;EAAM,CAAC;AAChC,CAAC,CAAC,CAACP,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC;AAE9B,OAAO,MAAMW,MAAM,GAAG,CAACC,KAAK,EAAEC,UAAU,KACtChB,KAAK,CAAE,GAAEb,GAAI,SAAQ,EAAE;EACrBuB,MAAM,EAAE,MAAM;EACdhB,OAAO,EAAE;IACP,GAAGA,OAAO;IACV,cAAc,EAAE;EAClB,CAAC;EACDiB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;IAAEE,KAAK;IAAEC;EAAW,CAAC;AAC5C,CAAC,CAAC,CACCf,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKA,IAAI,CAACL,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}